$ch.define("db",function(){"use strict";function a(a,b,d,e){if(!openDatabase)throw new Error("WebSQL is not supported by the browser.");if(void 0===a)throw new Error("$ch.db.websql requires at least a string-type database name parameter.");this.dbName=a,this.dbVersion=b||"1.0",this.dbDesc=d||"A WebSQL database manipulated via ChopJS",this.dbSize=e||c,"number"==typeof this.dbVersion&&(this.dbVersion=this.dbVersion+""),"string"==typeof this.dbSize&&(this.dbSize=parseInt(this.dbSize,10)),this.db=openDatabase(this.dbName,this.dbVersion,this.dbDesc,this.dbSize)}function b(a){this.websql=a,this.errorCb=function(){},this.successCb=function(){}}var c=5242880;$$CHOP.db={},$$CHOP.db={websql:function(b,c,d,e){return new a(b,c,d,e)}},a.prototype={query:function(a,c){if(0===arguments.length)throw new Error("ChopJS WebSQL query requires a parameter.");if("string"!=typeof a)throw new Error("ChopJS WebSQL query requires a string-type SQL parameter.");c||(c=[]);var d=new b(this);return this.db.transaction(function(b){var e=function(a,b){d.errorCb.apply(this,[a,b])},f=function(a,b){for(var c=[],e=b.rows.length,f=0;f!==e;++f)c.push(b.rows.item(f));d.successCb.apply(this,[a,c])};b.executeSql(a,c,f,e)}),d}},b.prototype={query:function(){return this.websql.query.apply(this.websql,arguments)},done:function(a,b){return a&&(this.successCb=a),b&&(this.errorCb=b),this}}});