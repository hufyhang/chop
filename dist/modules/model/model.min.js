$ch.define("model",function(){"use strict";$$CHOP.model={};var a=function(a,b){if("string"==typeof a){var c=b._data[a];if("object"==typeof c&&$$CHOP.isArray(c)===!1){var d=Object.keys(c);return-1!==d.indexOf("_chopjs-data-source")?$$CHOP.source(c["_chopjs-data-source"]):c}return b._data[a]}return void 0},b=function(a){if("string"==typeof a){var b=a.trim().match(/{{[^{]{1,}}}/g);if(null!==b){var c=b[0].replace(/{/g,"").trim();c=c.replace(/}/g,"").trim(),c=c.replace(/\\{/g,"{"),c=c.replace(/\\}/g,"}"),a={},a={"_chopjs-data-source":c}}else a=a.replace(/\\{/g,"{"),a=a.replace(/\\}/g,"}")}return a};$$CHOP.model=function(c){var d={_data:{},reset:function(){return this._data={},this},size:function(){return Object.keys(this._data).length},toJSON:function(){var a={},b=this;return $$CHOP.each(this._data,function(c){a[c]=b.get(c)}),a},get:function(b){if(void 0===b)return this._data;if($$CHOP.isArray(b)){var c=[],d=this;return $$CHOP.each(b,function(b){var e=d._data[b];c.push(a(e,d))}),c}return"string"==typeof b?a(b,this):void 0},set:function(a,c){if(0===arguments.length)return void 0;if(1===arguments.length){var d=a;if("object"!=typeof a||$$CHOP.isArray(a))return void 0;var e=this;return $$CHOP.each(d,function(a,c){e._data[a]={},e._data[a]=b(c)}),this}return 2===arguments.length?"string"!=typeof a?void 0:(this._data[a]=b(c),this):void 0}};return d=d.set(c)}});