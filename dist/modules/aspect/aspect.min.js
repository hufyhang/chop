$ch.define("aspect",function(){"use strict";var a=function(){if(3!==arguments.length)throw new Error("$ch.aspect API requires three parameters.");if("object"!=typeof arguments[0])throw new Error('$ch.aspect API requires an object-type parameter for "object".');if("string"!=typeof arguments[1])throw new Error('$ch.aspect API requires an string-type parameter for "method".');if("function"!=typeof arguments[2])throw new Error('$ch.aspect API requires an function-type parameter for "advice".')};$$CHOP.aspect={},$$CHOP.aspect={before:function(b,c,d){a.apply(this,arguments);var e=b[c];b[c]=function(){return d.apply(this,arguments),e.apply(this,arguments)}},after:function(b,c,d){a.apply(this,arguments);var e=b[c];b[c]=function(){var a,b=Array.prototype.slice.call(arguments,0);try{return a=e.apply(this,arguments),b.unshift(a),d.apply(this,b),a}catch(c){throw a=c,b.unshift(a),d.apply(this,b),c}}},afterReturn:function(b,c,d){a.apply(this,arguments);var e=b[c];b[c]=function(){var a=e.apply(this,arguments),b=Array.prototype.slice.call(arguments,0);return b.unshift(a),d.apply(this,b),a}},afterThrow:function(b,c,d){a.apply(this,arguments);var e=b[c];b[c]=function(){try{return e.apply(this,arguments)}catch(a){var b=Array.prototype.slice.call(arguments,0);throw b.unshift(a),d.apply(this,b),a}}},around:function(b,c,d){a.apply(this,arguments);var e=b[c];b[c]=function(){var a=Array.prototype.slice.call(arguments,0);return a.unshift(e),d.apply(this,a)}}}});