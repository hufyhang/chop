$ch.define("model",function(){"use strict";$$CHOP.model={};var t=function(t,e){if("string"==typeof t){var r=e._data[t];if("object"==typeof r&&$$CHOP.isArray(r)===!1){var a=Object.keys(r);return-1!==a.indexOf("_chopjs-data-source")?$$CHOP.source(r["_chopjs-data-source"]):r}return e._data[t]}return void 0},e=function(t){if("string"==typeof t){var e=t.trim().match(/{{[^{]{1,}}}/g);if(null!==e){var r=e[0].replace(/{/g,"").trim();r=r.replace(/}/g,"").trim(),r=r.replace(/\\{/g,"{"),r=r.replace(/\\}/g,"}"),t={},t={"_chopjs-data-source":r}}else t=t.replace(/\\{/g,"{"),t=t.replace(/\\}/g,"}")}return t};$$CHOP.model=function(r){var a={_data:{},reset:function(){return this._data={},this},size:function(){return Object.keys(this._data).length},toJSON:function(){var t={},e=this;return $$CHOP.each(this._data,function(r){t[r]=e.get(r)}),t},get:function(e){if(void 0===e)return this._data;if($$CHOP.isArray(e)){var r=[],a=this;return $$CHOP.each(e,function(e){var i=a._data[e];r.push(t(i,a))}),r}return"string"==typeof e?t(e,this):void 0},set:function(t,r){if(0===arguments.length)return void 0;if(1===arguments.length){var a=t;if("object"!=typeof t||$$CHOP.isArray(t))return void 0;var i=this;return $$CHOP.each(a,function(t,r){i._data[t]={},i._data[t]=e(r)}),this}return 2===arguments.length?"string"!=typeof t?void 0:(this._data[t]=e(r),this):void 0}};return a=a.set(r)}});