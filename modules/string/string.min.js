$ch.define("string",function(){"use strict";$$CHOP.string={},$$CHOP.string={build:function(r,e){if(0===arguments.length)throw new Error("$ch.string.build requires at least one pattern parameter.");if(r=r.replace(/\\{/g,"{"),r=r.replace(/\\}/g,"}"),"object"==typeof e&&$$CHOP.isArray(e)===!1){var n=r.match(/{{.+?}}/g);$$CHOP.each(n,function(n){var t=new RegExp(n,"g"),i="";i=n.replace(/{/g,""),i=i.replace(/}/g,""),void 0!==e[i]&&(r=r.replace(t,e[i]))})}return r},buffer:function(r){var e={buffer:[],append:function(r){return void 0!==r&&($$CHOP.isArray?$$CHOP.each(r,function(r){this.buffer.push(r)}):this.buffer.push(r)),this},prepend:function(r){if(void 0!==r)if($$CHOP.isArray)for(var e=r.length-1,n=0;e>=n;--e)this.buffer.unshift(r[e]);else this.buffer.unshift(r);return this},dump:function(){var r=this.buffer.join("");return this.buffer=[],r},toString:function(){return this.buffer.join("")}};return void 0!==r?$$CHOP.isArray(r)&&$$CHOP.each(r,function(r){e.append(r)}):e.append(r),e}}});