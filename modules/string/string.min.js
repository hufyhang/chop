$ch.define("string",function(){"use strict";$$CHOP.string={},$$CHOP.string={build:function(r,e){if(0===arguments.length)throw new Error("$ch.string.build requires at least one pattern parameter.");if(r=r.replace(/\\{/g,"{"),r=r.replace(/\\}/g,"}"),"object"==typeof e&&$$CHOP.isArray(e)===!1){var i=r.match(/{{.+?}}/g);$$CHOP.each(i,function(i){var n=new RegExp(i,"g"),t="";t=i.replace(/{/g,""),t=t.replace(/}/g,""),void 0!==e[t]&&(r=r.replace(n,e[t]))})}return r},buffer:function(r){var e={buffer:[],append:function(r){if(void 0!==r)if($$CHOP.isArray){var e=this;$$CHOP.each(r,function(r){e.buffer.push(r)})}else this.buffer.push(r);return this},prepend:function(r){if(void 0!==r)if($$CHOP.isArray)for(var e=this,i=r.length-1,n=0;i>=n;--i)e.buffer.unshift(r[i]);else this.buffer.unshift(r);return this},dump:function(r){void 0===r&&(r="");var e=this.buffer.join(r);return this.buffer=[],e},toString:function(r){return void 0===r&&(r=""),this.buffer.join(r)}};return void 0!==r&&($$CHOP.isArray(r)?$$CHOP.each(r,function(r){e.append(r)}):e.append(r)),e}}});