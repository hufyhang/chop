$ch.define("aspect",function(){"use strict";var t=function(){if(3!==arguments.length)throw new Error("$ch.aspect API requires three parameters.");if("object"!=typeof arguments[0])throw new Error('$ch.aspect API requires an object-type parameter for "object".');if("string"!=typeof arguments[1])throw new Error('$ch.aspect API requires an string-type parameter for "method".');if("function"!=typeof arguments[2])throw new Error('$ch.aspect API requires an function-type parameter for "advice".')};$$CHOP.aspect={},$$CHOP.aspect={before:function(r,e,a){t.apply(this,arguments);var n=r[e];r[e]=function(){return a.apply(this,arguments),n.apply(this,arguments)}},after:function(r,e,a){t.apply(this,arguments);var n=r[e];r[e]=function(){var t;try{t=n.apply(this,arguments)}catch(r){t=r}return a.call(this,t)}},afterReturn:function(r,e,a){t.apply(this,arguments);var n=r[e];r[e]=function(){var t=n.apply(this,arguments);return a.call(this,t)}},afterThrow:function(r,e,a){t.apply(this,arguments);var n=r[e];r[e]=function(){var t;try{t=n.apply(this,arguments)}catch(r){var e=Array.prototype.slice.call(arguments,0);e.unshift(r),a.apply(this,e)}return t}},around:function(r,e,a){t.apply(this,arguments);var n=r[e];r[e]=function(){var t=Array.prototype.slice.call(arguments,0);return t.unshift(n),a.apply(this,t)}}}});