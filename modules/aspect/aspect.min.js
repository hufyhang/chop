$ch.define("aspect",function(){"use strict";var t=function(){if(3!==arguments.length)throw new Error("$ch.aspect API requires three parameters.");if("object"!=typeof arguments[0])throw new Error('$ch.aspect API requires an object-type parameter for "object".');if("string"!=typeof arguments[1])throw new Error('$ch.aspect API requires an string-type parameter for "method".');if("function"!=typeof arguments[2])throw new Error('$ch.aspect API requires an function-type parameter for "advice".')};$$CHOP.aspect={},$$CHOP.aspect={before:function(r,e,a){t.apply(this,arguments);var n=r[e];r[e]=function(){return a.apply(this,arguments),n.apply(this,arguments)}},after:function(r,e,a){t.apply(this,arguments);var n=r[e];r[e]=function(){var t,r=Array.prototype.slice.call(arguments,0);try{return t=n.apply(this,arguments),r.unshift(t),a.apply(this,r),t}catch(e){throw t=e,r.unshift(t),a.apply(this,r),e}}},afterReturn:function(r,e,a){t.apply(this,arguments);var n=r[e];r[e]=function(){var t=n.apply(this,arguments),r=Array.prototype.slice.call(arguments,0);return r.unshift(t),a.apply(this,r),t}},afterThrow:function(r,e,a){t.apply(this,arguments);var n=r[e];r[e]=function(){try{return n.apply(this,arguments)}catch(t){var r=Array.prototype.slice.call(arguments,0);throw r.unshift(t),a.apply(this,r),t}}},around:function(r,e,a){t.apply(this,arguments);var n=r[e];r[e]=function(){var t=Array.prototype.slice.call(arguments,0);return t.unshift(n),a.apply(this,t)}}}});