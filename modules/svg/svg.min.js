$ch.define("svg",function(){"use strict";var e="http://www.w3.org/2000/svg";$$CHOP.svg={},$$CHOPEL.svg=function(t,n){var r=this.el,i={},o=document.createElementNS(e,"svg");return"number"==typeof t&&o.setAttribute("width",t),"number"==typeof n&&o.setAttribute("height",n),i={node:o,text:function(t,n,r){if(arguments.length<2)throw new Error("Chop.js svg.text requires at least two parameters.");var i=document.createElementNS(e,"text"),o=this.node;if("object"==typeof n&&$$CHOP.each(n,function(e,t){"g"===e?o=t:i.setAttribute(e,t)}),"object"==typeof r){var s=[];$$CHOP.each(r,function(e,t){s.push(e+": "+t)}),i.setAttribute("style",s.join(";"))}return i.innerHTML=t,o.appendChild(i),this},rect:function(t,n){if(0===arguments.length)throw new Error("Chop.js svg.rect requires at least one parameters.");var r=document.createElementNS(e,"rect"),i=this.node;if("object"==typeof t&&$$CHOP.each(t,function(e,t){"g"===e?i=t:r.setAttribute(e,t)}),"object"==typeof n){var o=[];$$CHOP.each(n,function(e,t){o.push(e+": "+t)}),r.setAttribute("style",o.join(";"))}return i.appendChild(r),this},g:function(t){var n=document.createElementNS(e,"g");if("object"==typeof t){var r=[];$$CHOP.each(t,function(e,t){r.push(e+": "+t)}),n.setAttribute("style",r.join(";"))}return this.node.appendChild(n),n},circle:function(t,n){if(0===arguments.length)throw new Error("Chop.js svg.circle requires at least one parameter.");var r=document.createElementNS(e,"circle"),i=this.node;if($$CHOP.each(t,function(e,t){"g"===e?i=t:r.setAttribute(e,t)}),"object"==typeof n){var o=[];$$CHOP.each(n,function(e,t){o.push(e+": "+t)}),r.setAttribute("style",o.join(";"))}return i.appendChild(r),this},ellipse:function(t,n){if(0===arguments.length)throw new Error("Chop.js svg.ellipse requires at least one parameter.");var r=document.createElementNS(e,"ellipse"),i=this.node;if($$CHOP.each(t,function(e,t){"g"===e?i=t:r.setAttribute(e,t)}),"object"==typeof n){var o=[];$$CHOP.each(n,function(e,t){o.push(e+": "+t)}),r.setAttribute("style",o.join(";"))}return i.appendChild(r),this},line:function(t,n){if(0===arguments.length)throw new Error("Chop.js svg.line requires at least one parameter.");var r=document.createElementNS(e,"line"),i=this.node;if($$CHOP.each(t,function(e,t){"g"===e?i=t:r.setAttribute(e,t)}),"object"==typeof n){var o=[];$$CHOP.each(n,function(e,t){o.push(e+": "+t)}),r.setAttribute("style",o.join(";"))}return i.appendChild(r),this},path:function(t,n){if(0===arguments.length)throw new Error("Chop.js svg.path requires at least one parameter.");var r=document.createElementNS(e,"path"),i=this.node;if($$CHOP.each(t,function(e,t){"g"===e?i=t:r.setAttribute(e,t)}),"object"==typeof n){var o=[];$$CHOP.each(n,function(e,t){o.push(e+": "+t)}),r.setAttribute("style",o.join(";"))}return i.appendChild(r),this},polyline:function(t,n){if(0===arguments.length)throw new Error("Chop.js svg.polyline requires at least one parameter.");var r=document.createElementNS(e,"polyline"),i=this.node;if($$CHOP.each(t,function(e,t){"g"===e?i=t:r.setAttribute(e,t)}),"object"==typeof n){var o=[];$$CHOP.each(n,function(e,t){o.push(e+": "+t)}),r.setAttribute("style",o.join(";"))}return i.appendChild(r),this},polygon:function(t,n){if(0===arguments.length)throw new Error("Chop.js svg.polygon requires at least one parameter.");var r=document.createElementNS(e,"polygon"),i=this.node;if($$CHOP.each(t,function(e,t){"g"===e?i=t:r.setAttribute(e,t)}),"object"==typeof n){var o=[];$$CHOP.each(n,function(e,t){o.push(e+": "+t)}),r.setAttribute("style",o.join(";"))}return i.appendChild(r),this}},r.appendChild(i.node),i}});